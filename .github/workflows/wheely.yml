# .github/workflows/on-push.yml

name: Build Wheels

on: 
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to run the workflow on'
        required: true
        default: 'main'
      targets:
        description: 'Targets to build for (all, linux, windows, osx)'
        required: true
        default: 'all'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            script: ./wheels.sh
            target: x86_64-unknown-linux-musl
          - os: windows-latest
            script: ./wheels.ps1
            target: x86_64-pc-windows-gnu
          - os: macos-latest
            script: ./wheels.sh
            target: x86_64-apple-darwin
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: Set execute permissions (Unix)
        run: chmod +x ${{ matrix.script }}
        if: matrix.os != 'windows-latest'

      - name: Create directories
        run: mkdir -p target/wheels

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.target }}
          default: true

      - name: Run bash script
        run: ${{ matrix.script }}
        if: matrix.os != 'windows-latest' && (github.event.inputs.targets == 'all' || github.event.inputs.targets == 'linux' || github.event.inputs.targets == 'osx')
        shell: bash

      - name: Run PowerShell script
        run: ${{ matrix.script }}
        if: matrix.os == 'windows-latest' && (github.event.inputs.targets == 'all' || github.event.inputs.targets == 'windows')
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: wheels
          path: target/wheels
          if-no-files-found: error # 'warn' or 'ignore' are also available, 'error' will fail the action if no files are found
